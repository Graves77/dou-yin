// Code generated by goctl. DO NOT EDIT.
// Source: mysqlmanage.proto

package server

import (
	"context"

	"awesomeProject/dou-yin/commaction/rpc/mysqlmanage/internal/logic"
	"awesomeProject/dou-yin/commaction/rpc/mysqlmanage/internal/svc"
	"awesomeProject/dou-yin/commaction/rpc/mysqlmanage/types/mysqlmanageserver"
)

type MySQLManageServerServer struct {
	svcCtx *svc.ServiceContext
	mysqlmanageserver.UnimplementedMySQLManageServerServer
}

func NewMySQLManageServerServer(svcCtx *svc.ServiceContext) *MySQLManageServerServer {
	return &MySQLManageServerServer{
		svcCtx: svcCtx,
	}
}

// 获得用户信息
func (s *MySQLManageServerServer) CheckUserInf(ctx context.Context, in *mysqlmanageserver.CheckUserInfRequest) (*mysqlmanageserver.CheckUserInfResponse, error) {
	l := logic.NewCheckUserInfLogic(ctx, s.svcCtx)
	return l.CheckUserInf(in)
}

// 发布列表视频信息
func (s *MySQLManageServerServer) GetVideoList(ctx context.Context, in *mysqlmanageserver.GetVideoListRequest) (*mysqlmanageserver.GetVideoListResponse, error) {
	l := logic.NewGetVideoListLogic(ctx, s.svcCtx)
	return l.GetVideoList(in)
}

// 发布列表视频数量
func (s *MySQLManageServerServer) VideoNum(ctx context.Context, in *mysqlmanageserver.VideoNumRequest) (*mysqlmanageserver.VideoNumResponse, error) {
	l := logic.NewVideoNumLogic(ctx, s.svcCtx)
	return l.VideoNum(in)
}

// 关注、取消关注
func (s *MySQLManageServerServer) RelationAction(ctx context.Context, in *mysqlmanageserver.RelationActionRequest) (*mysqlmanageserver.RelationActionResponse, error) {
	l := logic.NewRelationActionLogic(ctx, s.svcCtx)
	return l.RelationAction(in)
}

// 粉丝列表
func (s *MySQLManageServerServer) RelationFollowerList(ctx context.Context, in *mysqlmanageserver.RelationFollowerListRequest) (*mysqlmanageserver.RelationFollowerListResponse, error) {
	l := logic.NewRelationFollowerListLogic(ctx, s.svcCtx)
	return l.RelationFollowerList(in)
}

// 关注列表
func (s *MySQLManageServerServer) RelationFollowList(ctx context.Context, in *mysqlmanageserver.RelationFollowListRequest) (*mysqlmanageserver.RelationFollowListResponse, error) {
	l := logic.NewRelationFollowListLogic(ctx, s.svcCtx)
	return l.RelationFollowList(in)
}

// 喜欢视频数量
func (s *MySQLManageServerServer) FavoriteVideoNum(ctx context.Context, in *mysqlmanageserver.FavoriteVideoNumRequest) (*mysqlmanageserver.FavoriteVideoNumResponse, error) {
	l := logic.NewFavoriteVideoNumLogic(ctx, s.svcCtx)
	return l.FavoriteVideoNum(in)
}

// 获取喜欢列表
func (s *MySQLManageServerServer) GetFavoriteVideoList(ctx context.Context, in *mysqlmanageserver.GetFavoriteVideoListRequest) (*mysqlmanageserver.GetFavoriteVideoListResponse, error) {
	l := logic.NewGetFavoriteVideoListLogic(ctx, s.svcCtx)
	return l.GetFavoriteVideoList(in)
}

// 点赞
func (s *MySQLManageServerServer) AddVideoFavorite(ctx context.Context, in *mysqlmanageserver.AddVideoFavoriteRequest) (*mysqlmanageserver.AddVideoFavoriteResponse, error) {
	l := logic.NewAddVideoFavoriteLogic(ctx, s.svcCtx)
	return l.AddVideoFavorite(in)
}

// 取消点赞
func (s *MySQLManageServerServer) SubVideoFavorite(ctx context.Context, in *mysqlmanageserver.SubVideoFavoriteRequest) (*mysqlmanageserver.SubVideoFavoriteResponse, error) {
	l := logic.NewSubVideoFavoriteLogic(ctx, s.svcCtx)
	return l.SubVideoFavorite(in)
}
