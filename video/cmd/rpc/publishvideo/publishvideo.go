// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package publishvideo

import (
	"context"

	"awesomeProject/dou-yin/video/cmd/rpc/types/video"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DouyinPublishActionRequest  = video.DouyinPublishActionRequest
	DouyinPublishActionResponse = video.DouyinPublishActionResponse
	DouyinPublishListRequest    = video.DouyinPublishListRequest
	DouyinPublishListResponse   = video.DouyinPublishListResponse
	User                        = video.User
	Video                       = video.Video

	PublishVideo interface {
		PublishVideoAction(ctx context.Context, in *DouyinPublishActionRequest, opts ...grpc.CallOption) (*DouyinPublishActionResponse, error)
		PublishVideoList(ctx context.Context, in *DouyinPublishListRequest, opts ...grpc.CallOption) (*DouyinPublishListResponse, error)
	}

	defaultPublishVideo struct {
		cli zrpc.Client
	}
)

func NewPublishVideo(cli zrpc.Client) PublishVideo {
	return &defaultPublishVideo{
		cli: cli,
	}
}

func (m *defaultPublishVideo) PublishVideoAction(ctx context.Context, in *DouyinPublishActionRequest, opts ...grpc.CallOption) (*DouyinPublishActionResponse, error) {
	client := video.NewPublishVideoClient(m.cli.Conn())
	return client.PublishVideoAction(ctx, in, opts...)
}

func (m *defaultPublishVideo) PublishVideoList(ctx context.Context, in *DouyinPublishListRequest, opts ...grpc.CallOption) (*DouyinPublishListResponse, error) {
	client := video.NewPublishVideoClient(m.cli.Conn())
	return client.PublishVideoList(ctx, in, opts...)
}
