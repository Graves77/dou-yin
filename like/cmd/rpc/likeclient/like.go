// Code generated by goctl. DO NOT EDIT.
// Source: like.proto

package likeclient

import (
	"context"

	"awesomeProject/dou-yin/like/cmd/rpc/types/like"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LikeListReq   = like.LikeListReq
	LikeListResp  = like.LikeListResp
	LikeVideoReq  = like.LikeVideoReq
	LikeVideoResp = like.LikeVideoResp
	User          = like.User
	Video         = like.Video

	Like interface {
		LikeVideo(ctx context.Context, in *LikeVideoReq, opts ...grpc.CallOption) (*LikeVideoResp, error)
		LikeList(ctx context.Context, in *LikeListReq, opts ...grpc.CallOption) (*LikeListResp, error)
	}

	defaultLike struct {
		cli zrpc.Client
	}
)

func NewLike(cli zrpc.Client) Like {
	return &defaultLike{
		cli: cli,
	}
}

func (m *defaultLike) LikeVideo(ctx context.Context, in *LikeVideoReq, opts ...grpc.CallOption) (*LikeVideoResp, error) {
	client := like.NewLikeClient(m.cli.Conn())
	return client.LikeVideo(ctx, in, opts...)
}

func (m *defaultLike) LikeList(ctx context.Context, in *LikeListReq, opts ...grpc.CallOption) (*LikeListResp, error) {
	client := like.NewLikeClient(m.cli.Conn())
	return client.LikeList(ctx, in, opts...)
}
