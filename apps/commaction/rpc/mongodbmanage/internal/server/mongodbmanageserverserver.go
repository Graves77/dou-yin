// Code generated by goctl. DO NOT EDIT.
// Source: mongodbmanage.proto

package server

import (
	logic2 "awesomeProject/dou-yin/apps/commaction/rpc/mongodbmanage/internal/logic"
	"awesomeProject/dou-yin/apps/commaction/rpc/mongodbmanage/internal/svc"
	mongodbmanageserver2 "awesomeProject/dou-yin/apps/commaction/rpc/mongodbmanage/types/mongodbmanageserver"
	"context"
)

type MongodbManageServerServer struct {
	svcCtx *svc.ServiceContext
	mongodbmanageserver2.UnimplementedMongodbManageServerServer
}

func NewMongodbManageServerServer(svcCtx *svc.ServiceContext) *MongodbManageServerServer {
	return &MongodbManageServerServer{
		svcCtx: svcCtx,
	}
}

func (s *MongodbManageServerServer) MakeComment(ctx context.Context, in *mongodbmanageserver2.CommentActionRequest) (*mongodbmanageserver2.CommentActionResponse, error) {
	l := logic2.NewMakeCommentLogic(ctx, s.svcCtx)
	return l.MakeComment(in)
}

func (s *MongodbManageServerServer) GetComment(ctx context.Context, in *mongodbmanageserver2.CommentListRequest) (*mongodbmanageserver2.CommentListResponse, error) {
	l := logic2.NewGetCommentLogic(ctx, s.svcCtx)
	return l.GetComment(in)
}

func (s *MongodbManageServerServer) GetMessage(ctx context.Context, in *mongodbmanageserver2.MessageChatRequest) (*mongodbmanageserver2.MessageChatResponse, error) {
	l := logic2.NewGetMessageLogic(ctx, s.svcCtx)
	return l.GetMessage(in)
}

func (s *MongodbManageServerServer) SendMessage(ctx context.Context, in *mongodbmanageserver2.MessageActionRequest) (*mongodbmanageserver2.MessageActionResponse, error) {
	l := logic2.NewSendMessageLogic(ctx, s.svcCtx)
	return l.SendMessage(in)
}
