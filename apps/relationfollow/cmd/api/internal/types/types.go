// Code generated by goctl. DO NOT EDIT.
package types

type RelationActionHandlerRequest struct {
	Token       string `form:"token"`
	To_user_id  int64  `form:"to_user_id"`
	Sction_type int32  `form:"action_type"`
}

type RelationActionHandlerResponse struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type RelationFollowListHandlerRequest struct {
	Token  string `form:"token"`
	UserId int64  `form:"user_id"`
}

type RelationFollowListHandlerResponse struct {
	StatusCode int32          `json:"status_code"`
	StatusMsg  string         `json:"status_msg"`
	UserList   []RelationUser `json:"user_list"`
}

type RelationFollowerListHandlerRequest struct {
	Token  string `form:"token"`
	UserId int64  `form:"user_id"`
}

type RelationFollowerListHandlerResponse struct {
	StatusCode int32          `json:"status_code"`
	StatusMsg  string         `json:"status_msg"`
	UserList   []RelationUser `json:"user_list"`
}

type RelationUser struct {
	Id            int64  `json:"id" gorm:"column:user_id"`
	Name          string `json:"name" gorm:"column:user_nick_name"`
	FollowCount   int64  `json:"follow_count" gorm:"column:follow_count"`
	FollowerCount int64  `json:"follower_count" gorm:"column:follower_count"`
	IsFollow      bool   `json:"is_follow"`
}

type Message struct {
	Id         int64  `json:"id"                    form:"id"                    bson:"_id"`
	ToUserId   int64  `json:"to_user_id"            form:"to_user_id"            bson:"to_user_id"`
	FromUserId int64  `json:"from_user_id"          form:"from_user_id"          bson:"from_user_id"`
	Content    string `json:"content"               form:"content"               bson:"content"`
	CreateTime string `json:"create_time,optional"  form:"create_time,optional"  bson:"create_time"`
}

type SingleMessage struct {
	Id         int64  `json:"id"`
	Content    string `json:"content"`
	CreateTime string `json:"create_time"`
}

type MessageChatHandlerRequest struct {
	Token    string `form:"token"`
	ToUserId int64  `form:"to_user_id"`
}

type MessageChatHandlerResponse struct {
	StatusCode  int32           `json:"status_code"`
	StatusMsg   string          `json:"status_msg"`
	MessageList []SingleMessage `json:"message_list"`
}

type MessageActionHandlerRequest struct {
	Token      string `form:"token"`
	ToUserId   int64  `form:"to_user_id"`
	ActionType int32  `form:"action_type"`
	Content    string `form:"content"`
}

type MessageActionHandlerResponse struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type RelationFriendListHandlerRequest struct {
	Token  string `form:"token"`
	UserId int64  `form:"user_id"`
}

type RelationFriendListHandlerResponse struct {
	StatusCode int32        `json:"status_code"`
	StatusMsg  string       `json:"status_msg"`
	Userlist   []FriendUser `json:"user_list"`
}

type FriendUser struct {
	Id            int64  `json:"id" gorm:"column:user_id"`
	Name          string `json:"name" gorm:"column:user_nick_name"`
	FollowCount   int64  `json:"follow_count" gorm:"column:follow_count"`
	FollowerCount int64  `json:"follower_count" gorm:"column:follower_count"`
	IsFollow      bool   `json:"is_follow"`
	Avatar        string `json:"avatar"`  //用户头像url
	Message       string `json:"message"` // 和该好友的最新聊天消息
	MsgType       int64  `json:"msgType"` //// message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
}

type Video struct {
	Id      int64  `json:"id"`
	Author  User   `json:"author"`
	PlayUrl string `json:"play_url"`
	CoverUrl      string `json:"cover_url"`
	FavoriteCount int64  `json:"favorite_count"`
	CommentCount  int64  `json:"comment_count"`
	IsFavotite    bool   `json:"is_favorite"`
	VideoTitle    string `json:"title"`
}

type VideoTest struct {
	Id      int64  `form:"id" json:"id"`
	Author  User   `form:"author" json:"author"`
	PlayUrl string `form:"play_url" json:"play_url"`
	CoverUrl      string `form:"cover_url" json:"cover_url"`
	FavoriteCount int64  `form:"favorite_count" json:"favorite_count"`
	CommentCount  int64  `form:"comment_count" json:"comment_count"`
	IsFavotite    bool   `form:"is_favorite" json:"is_favorite"`
}

type User struct {
	UserId        int64  `gorm:"column:user_id"        json:"id"               form:"user_id"        bson:"user_id"`
	Name          string `gorm:"column:user_nick_name" json:"name"             form:"name"           bson:"name"`
	FollowCount   int64  `gorm:"column:follow_count"   json:"follow_count"     form:"follow_count"   bson:"follow_count"`
	FollowerCount int64  `gorm:"column:follower_count" json:"follower_count"   form:"follower_count" bson:"follower_count"`
	IsFollow      bool   `json:"is_follow"             form:"is_follow"        bson:"is_follow"`
}
